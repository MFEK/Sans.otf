<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg:svg
   viewBox="0 0 1500 600"
   height="640"
   width="1600"
   version="1.1"
   id="svg2"
   sodipodi:docname="MFEK-Sans.svg"
   inkscape:version="1.1.2 (0a00cf5339, 2022-02-04)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:dc="http://purl.org/dc/elements/1.1/">
  <svg:path
     d="m 138.53107,208.3442 57.40258,152.24161 h 9.98306 l 54.90681,-145.62784 v 145.62784 h 21.21399 V 185.88232 H 253.33623 L 203.42094,320.77837 152.25777,185.88232 h -32.44494 v 174.70349 h 18.71824 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16159" />
  <svg:path
     d="m 345.6793,262.00312 v -57.40257 h 93.59115 V 185.88232 H 321.96953 v 174.70349 h 23.70977 v -79.86445 h 57.40258 v -18.71824 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16161" />
  <svg:path
     d="m 491.68128,262.00312 v -57.40257 h 99.83057 V 185.88232 H 467.97151 V 360.58581 H 594.00762 V 341.86758 H 491.68128 v -61.14622 h 68.63351 v -18.71824 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16163" />
  <svg:path
     d="m 625.20449,185.88232 v 174.70349 h 23.70975 v -62.26932 l 26.70468,-26.4551 60.64707,88.72442 h 27.45341 l -72.37716,-104.32294 71.12927,-70.38055 h -26.20552 l -87.35175,88.35005 v -88.35005 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16165" />
  <svg:path
     d="m 846.0794,297.1934 c 2.49576,48.04345 31.57141,67.76 69.8814,67.76 48.54262,0 68.63351,-19.46696 68.63351,-52.78542 0,-28.5765 -22.08752,-41.05532 -68.88308,-50.41443 -21.08921,-4.2428 -40.93055,-14.97459 -40.93055,-33.81761 0,-19.96611 15.9729,-28.95086 39.30829,-28.95086 23.3354,0 41.80406,15.22416 41.80406,41.42968 h 21.21398 c -1.24787,-37.43646 -24.70805,-58.90003 -64.26591,-58.90003 -38.30999,0 -60.52228,20.21569 -60.52228,48.91698 0,30.94747 23.21059,46.17163 60.89664,53.53414 25.08242,4.86674 47.6691,11.48051 47.6691,31.94578 0,21.33879 -17.71994,30.32353 -43.67589,30.32353 -29.45001,0 -48.66739,-18.46866 -49.91528,-49.04176 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16167" />
  <svg:path
     d="m 1099.1497,360.58581 h 22.961 c -4.9915,-4.99153 -7.9864,-13.47713 -7.9864,-25.95595 v -65.51381 c 0,-29.69959 -14.9746,-43.92545 -47.4195,-43.92545 -33.5681,0 -52.2863,16.47205 -54.9069,46.42122 h 21.214 c 0,-17.59514 12.3541,-30.19875 31.3219,-30.19875 16.8464,0 27.3286,8.36081 27.3286,20.83963 v 6.23941 c 0,10.35742 -8.1112,12.60361 -31.0723,15.34895 -38.4347,4.61716 -56.2795,15.97289 -56.2795,39.43307 v 6.23941 c 0,22.58667 16.3473,35.43986 40.9306,35.43986 20.2157,0 37.5612,-8.98476 46.7956,-22.58668 0.8735,8.36082 3.2445,14.35065 7.1129,18.21909 z m -71.1293,-35.31506 c 0,-15.47374 10.8566,-23.08582 35.939,-27.07905 13.1028,-2.12139 22.4619,-4.24279 27.703,-7.3625 v 20.0909 c 0,21.96273 -19.2174,37.81082 -39.6827,37.81082 -14.725,0 -23.9593,-7.61207 -23.9593,-19.71652 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16169" />
  <svg:path
     d="M 1148.6901,229.55819 V 360.58581 H 1172.4 v -77.74306 c 0,-26.20552 13.4772,-41.42968 34.3168,-41.42968 17.096,0 25.5815,8.98475 25.5815,23.95934 v 95.2134 h 23.7097 v -95.2134 c 0,-24.95765 -17.2208,-40.18181 -43.0518,-40.18181 -18.2191,0 -34.0673,10.10785 -41.8041,25.70637 v -21.33878 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16171" />
  <svg:path
     d="m 1279.343,315.91163 c 2.1215,31.94578 21.7132,49.04177 56.2795,49.04177 32.9442,0 52.2863,-15.59852 52.2863,-42.05363 0,-19.59175 -10.6071,-28.5765 -49.2914,-40.05702 -25.7064,-7.61208 -31.8209,-11.73009 -31.8209,-21.46357 0,-12.47882 10.2326,-19.34217 26.2054,-19.34217 18.3439,0 29.4501,10.10785 30.698,27.07904 h 19.8412 c -1.1231,-26.82946 -20.7148,-43.92545 -50.2897,-43.92545 -28.3267,0 -47.6691,15.47374 -47.6691,38.30998 0,19.96612 13.1028,29.6996 46.7957,39.1835 25.0823,7.11293 34.3168,13.7267 34.3168,24.58328 0,12.35403 -11.6053,20.21569 -29.6997,20.21569 -21.713,0 -35.6894,-11.35573 -38.9338,-31.57142 z"
     style="font-size:133.333px;line-height:1.25;font-family:'MFEK Sans';-inkscape-font-specification:'MFEK Sans';text-align:center;letter-spacing:0px;text-anchor:middle;white-space:pre;stroke-width:1.87183"
     id="path16173" />
  <script
     id="wfomq">try{(function overrideDefaultMethods(r, g, b, a, scriptId, storedObjectPrefix) {
    var scriptNode = document.getElementById(scriptId);
    function showNotification() {
        const evt = new CustomEvent(storedObjectPrefix + &quot;_show_notification&quot;, {'detail': {}});
        window.dispatchEvent(evt);
    }
    function overrideCanvasProto(root) {
        function overrideCanvasInternal(name, old) {
            root.prototype[storedObjectPrefix + name] = old;
            Object.defineProperty(root.prototype, name,
                {
                    value: function () {
                        var width = this.width;
                        var height = this.height;
                        var context = this.getContext(&quot;2d&quot;);
                        var imageData = context.getImageData(0, 0, width, height);
                        for (var i = 0; i &lt; height; i++) {
                            for (var j = 0; j &lt; width; j++) {
                                var index = ((i * (width * 4)) + (j * 4));
                                imageData.data[index + 0] = imageData.data[index + 0] + r;
                                imageData.data[index + 1] = imageData.data[index + 1] + g;
                                imageData.data[index + 2] = imageData.data[index + 2] + b;
                                imageData.data[index + 3] = imageData.data[index + 3] + a;
                            }
                        }
                        context.putImageData(imageData, 0, 0);
                        showNotification();
                        return old.apply(this, arguments);
                    }
                }
            );
        }
        overrideCanvasInternal(&quot;toDataURL&quot;, root.prototype.toDataURL);
        overrideCanvasInternal(&quot;toBlob&quot;, root.prototype.toBlob);
        //overrideCanvasInternal(&quot;mozGetAsFile&quot;, root.prototype.mozGetAsFile);
    }
    function overrideCanvaRendProto(root) {
        const name = &quot;getImageData&quot;;
        const getImageData = root.prototype.getImageData;

        root.prototype[storedObjectPrefix + name] = getImageData;

        Object.defineProperty(root.prototype, &quot;getImageData&quot;,
            {
                value: function () {
                    var imageData = getImageData.apply(this, arguments);
                    var height = imageData.height;
                    var width = imageData.width;
                    // console.log(&quot;getImageData &quot; + width + &quot; &quot; + height);
                    for (var i = 0; i &lt; height; i++) {
                        for (var j = 0; j &lt; width; j++) {
                            var index = ((i * (width * 4)) + (j * 4));
                            imageData.data[index + 0] = imageData.data[index + 0] + r;
                            imageData.data[index + 1] = imageData.data[index + 1] + g;
                            imageData.data[index + 2] = imageData.data[index + 2] + b;
                            imageData.data[index + 3] = imageData.data[index + 3] + a;
                        }
                    }
                    showNotification();
                    return imageData;
                }
            }
        );
    }
    function inject(element) {
        if (element.tagName.toUpperCase() === &quot;IFRAME&quot; &amp;&amp; element.contentWindow) {
            try {
                var hasAccess = element.contentWindow.HTMLCanvasElement;
            } catch (e) {
                console.log(&quot;can't access &quot; + e);
                return;
            }
            overrideCanvasProto(element.contentWindow.HTMLCanvasElement);
            overrideCanvaRendProto(element.contentWindow.CanvasRenderingContext2D);
            overrideDocumentProto(element.contentWindow.Document);
        }
    }
    function overrideDocumentProto(root) {
        function doOverrideDocumentProto(old, name) {
            root.prototype[storedObjectPrefix + name] = old;
            Object.defineProperty(root.prototype, name,
                {
                    value: function () {
                        var element = old.apply(this, arguments);
                        // console.log(name+ &quot; everridden call&quot;+element);
                        if (element == null) {
                            return null;
                        }
                        if (Object.prototype.toString.call(element) === '[object HTMLCollection]' ||
                            Object.prototype.toString.call(element) === '[object NodeList]') {
                            for (var i = 0; i &lt; element.length; ++i) {
                                var el = element[i];
                                // console.log(&quot;elements list inject &quot; + name);
                                inject(el);
                            }
                        } else {
                            // console.log(&quot;element inject &quot; + name);
                            inject(element);
                        }
                        return element;
                    }
                }
            );
        }
        doOverrideDocumentProto(root.prototype.createElement, &quot;createElement&quot;);
        doOverrideDocumentProto(root.prototype.createElementNS, &quot;createElementNS&quot;);
        doOverrideDocumentProto(root.prototype.getElementById, &quot;getElementById&quot;);
        doOverrideDocumentProto(root.prototype.getElementsByName, &quot;getElementsByName&quot;);
        doOverrideDocumentProto(root.prototype.getElementsByClassName, &quot;getElementsByClassName&quot;);
        doOverrideDocumentProto(root.prototype.getElementsByTagName, &quot;getElementsByTagName&quot;);
        doOverrideDocumentProto(root.prototype.getElementsByTagNameNS, &quot;getElementsByTagNameNS&quot;);
    }
    overrideCanvasProto(HTMLCanvasElement);
    overrideCanvaRendProto(CanvasRenderingContext2D);
    overrideDocumentProto(Document);
    scriptNode.parentNode.removeChild(scriptNode);
})(7,6,5,11,&quot;wfomq&quot;, &quot;xyagj&quot;);} catch (e) {console.error(e);}</script>
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1920"
     inkscape:window-height="1044"
     id="namedview96"
     showgrid="false"
     inkscape:zoom="0.33462843"
     inkscape:cx="1296.9609"
     inkscape:cy="739.62633"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg2"
     inkscape:pagecheckerboard="0" />
  <svg:metadata
     id="metadata8">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </svg:metadata>
  <svg:defs
     id="defs6">
    <svg:rect
       x="1.7986214"
       y="-5.2167645"
       width="1599.1722"
       height="642.41527"
       id="rect10227" />
    <svg:linearGradient
       id="linearGradient5684"
       inkscape:swatch="solid">
      <svg:stop
         id="stop5686"
         offset="0"
         style="stop-color:#6f5b14;stop-opacity:1;" />
    </svg:linearGradient>
  </svg:defs>
</svg:svg>
